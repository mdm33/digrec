= The PROIEL web application

The PROIEL web application (<tt>proiel-web</tt>) is a tool for
collaborative treebank annotation using a dependency-grammar formalism.

== Installation

<tt>proiel-web</tt> uses the Ruby on Rails framework and some familiarity
with this framework is necessary. You can find general introductions to
Ruby on Rails on link:http://rubyonrails.org/ and
link:http://guides.rubyonrails.org/.

This version of <tt>proiel-web</tt> uses Rails 3.2. It is a prerequisite
that you have a functioning Ruby environment and a recent version of
RubyGems installed. The application is designed to work with Ruby 1.8.7 and
Ruby 1.9.2.

=== Step 1: Install Rails and dependencies

Make sure that the <tt>bundler</tt> gem is installed on your system.

    $ gem install bundler

Run the command

    $ bundle

to install all required dependencies.

Note that if you only intend to run the application (and perhaps extend its
functionality with plugins), you will not need support for the
application's testing mode. You can use the command

    $ bundle install --without test

to avoid installing the dependencies that are only used by the testing
version of the application.

=== Step 2: External binaries

You should also install +graphviz+ from link:http://www.graphviz.org/ to
get dependency graph visualisations. Version 2.26.3 is known to work with
this release of the PROIEL application, but more recent versions may also
work. +graphviz+ must be compiled with SVG support. The recommended
configuration settings are

    --with-fontconfig --with-freetype2 --with-pangocairo --with-rsvg

You will also need the +SFST+ toolkit from
link:http://www.ims.uni-stuttgart.de/projekte/gramotron/SOFTWARE/SFST.html.
This release of the PROIEL web application is designed to work with version
1.3 of +SFST+.

=== Step 3: Generate support files

Before starting the application for the first time, you must run

    $ make -C lib

to build the application's support files.

== Step 4: Configure the database

Copy +config/database.yml.example+ to +config/database.yml+ and customize
if needed. The default setup assumes a MySQL databases called +proiel+.

Initialize a new database by running

    $ rake db:setup

Add an administrator account. This should be done using Rails' console
interface:

    $ ./script/rails c
    Loading development environment (Rails 3.1.3)
    >> User.create_confirmed_administrator! :login => "username", :first_name => "Foo", :last_name => "Bar", :email => "foo@bar", :password => "foo"

=== Step 5: Set run-time configuration settings

Inspect +config/app_config.yml+ and make changes as necessary. It is
essential that you change the +base_url+ and the +dc_*+ fields.

== License

The PROIEL web application is licensed under the terms of the GNU General
Public License version 2. See the file +COPYING+ for details.

The application was written by Marius L. Jøhndal (University of Cambridge),
Dag Haug (University of Oslo) and Anders Nøklestad (University of Oslo).

== Modifying the application

This details some ways in which you may want to modify or extend the
application.

=== Adding a dependency graph visualization method

The default plugin for visualization of dependency graphs uses +graphviz+.
As long as you are able to use the +dot+ engine from +graphviz+, adding new
visualizations is trivial:

  1. Create a new visualization template in +plugins/graph_visualizers/graphviz+.
     Have a look at the existing ones to see how the templates work.
  2. Add a new visualization choice in
     +app/views/preferences/edit.html.haml+. This will enable users to select
     the visualization method.
  3. Add a new description of the visualization method in +config/locales/en.yml+.

Early testing of new visualisations is probably best done using the Rails
console. To see the +dot+ file produced before it is passed to +graphviz+,
you can try the following:

    $ ./script/console
    Loading development environment (Rails 2.3.11)
    >> puts GraphvizVisualization.new(Sentence.find(47625)).generate(:format => :dot,
           :mode => :linearized)

To run it through +graphviz+, try changing the format to +svg+, which in
this case revealed a syntax error in the generated +dot+ file.

    >> GraphvizVisualization.new(Sentence.find(47625)).generate(:format => :svg,
          :mode => :linearized)
    VisualizationError: graphviz exited: Error: <stdin>:6: syntax error near
    line 6
    context:     depthR [style=invis] >>>  -> <<<

      from /home/mlj/src/proiel/lib/graph_visualization.rb:70:in `generate'
        from (irb):1
